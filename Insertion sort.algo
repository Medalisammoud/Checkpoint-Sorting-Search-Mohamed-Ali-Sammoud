// procedure read table 
PROCEDURE enter_array(var arr : ARRAY_OF INTEGER; n : INTEGER)
VAR
    i:INTEGER;
BEGIN
// read of tables
        FOR i FROM 0 TO n-1 STEP 1  DO
            write("Enter Element of Table :");
            read(arr[i]);
        END_FOR
END

// algorithm of insertion sort  
ALGORITHM insertion_sort
VAR
    arr:ARRAY_OF INTEGER[];
    n,i,j,temp,count:INTEGER;
BEGIN
    REPEAT
        write("Length of table :");
        read(n);
    UNTIL ((n > 0)AND(n < 50))
    n := tab.length;
    enter_array(arr,n);
   FOR i FROM 1 TO n-1 STEP 1  DO
       // Last i elements are already in place
       count:=0;
       temp:=tab[i];
      FOR j FROM i-1 TO 0 STEP -1 DO
           IF (tab[j]<temp) THEN
               tab[j+1]:=tab[j];
               count:=j;
           END_IF
      END_FOR
    tab[count]:=temp;
   END_FOR
END